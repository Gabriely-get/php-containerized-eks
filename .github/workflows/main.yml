name: ci

on:
  push:
    branches:
      - main

jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Build and export to Docker
        uses: docker/build-push-action@v6
        with:
          context: ./Basic-PHP-RESTful-API
          load: true
          tags: "teste"
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      ## Aqui foi definido o nível de vulnerabilidade HIGH para passar no Scan, uma vez que a vulnerabilidade é na propria imagem Base
      - name: Docker Scout Quickview and CVEs
        uses: docker/scout-action@v1
        with:
          # command: cves,recommendations,compare
          # to-latest: true
          # ignore-base: true
          # ignore-unchanged: true
          # only-fixed: true
          only-severities: critical
          command: quickview,cves
          image: teste

      - name: Docker Scout SBOM
        uses: docker/scout-action@v1
        with:
          command: sbom
          image: teste
          output: sbom.json

      - name: Docker Scout Recommendations
        uses: docker/scout-action@v1
        with:
          command: recommendations
          image: teste

      # - name: Upload Docker Scout SARIF Report 
      #   uses: github/codeql-action/upload-sarif@v3
      #   with:
      #     sarif_file: /home/runner/work/php-containerized-eks/php-containerized-eks/cves.json
      
      - uses: actions/checkout@master
      # - name: List workspace contents
      #   run: ls -R /github/workspace
      - name: Install Snyk CLI
        uses: snyk/actions/setup@master

      - name: Snyk test
        run: |
          cd Basic-PHP-RESTful-API && snyk test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      
      - name: Snyk test
        run: cd Basic-PHP-RESTful-API && snyk code test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      # - name: Run Snyk to check for vulnerabilities
      #   uses: snyk/actions/php@master
      #   env:
      #     SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      #   with:
      #     args: --sarif-file-output=snyk.sarif
      # - run: ls

      # - name: Upload result to GitHub Code Scanning
      #   uses: github/codeql-action/upload-sarif@v3
      #   with:
      #     sarif_file: /home/runner/work/php-containerized-eks/php-containerized-eks/snyk.sarif

      - name: Scan Image w/ Sarif
        uses: anchore/scan-action@v3
        id: scan-2
        with:
          image: "teste"
          fail-build: false
          output-format: sarif

      # - name: Upload Anchore Scan SARIF Report
      #   uses: github/codeql-action/upload-sarif@v3
      #   with:
      #     sarif_file: ${{ steps.scan-2.outputs.sarif }}
      

  build:
    runs-on: ubuntu-latest
    needs: scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - run: whoami
      - run: sudo -s

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Validate build configuration
        uses: docker/build-push-action@v6
        with:
          context: ./Basic-PHP-RESTful-API
          call: check

      - name: Build and export to Docker
        uses: docker/build-push-action@v6
        with:
          context: ./Basic-PHP-RESTful-API
          load: true
          tags: "teste"

      - name: Test
        run: |
          docker run -dp 8000:8000 --name teste teste
          docker ps
          curl -X POST http://0.0.0.0:8000/api/users -d "name=John Doe&age=30&job=Developer"
          docker rm -f teste

  push-image:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./Basic-PHP-RESTful-API
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ vars.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest
